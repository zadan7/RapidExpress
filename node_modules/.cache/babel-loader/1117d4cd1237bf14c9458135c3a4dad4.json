{"ast":null,"code":"'use strict';\n/**\n * A structure containing the request and response context for a given FaunaDB request.\n * Provided to an observer function optionally defined in the {@link Client} constructor.\n *\n * @param {'GET' | 'POST' | 'PUT' | 'PATCH' | 'DELETE'} method\n *   The HTTP method used in the request.\n * @param {string} path\n *   The path that was queried. Relative to the client's domain.\n * @param {string} query\n *   URL query parameters. Only set if `method` is \"GET\".\n * @param {Object} requestRaw\n *   The JSON request string.\n * @param {Object} requestContent\n *   The request data.\n * @param {string} responseRaw\n *   The unparsed response data, as a string.\n * @param {object | FaunaHttpErrorResponseContent} responseContent\n *   The response data parsed as JSON.\n * @param {number} statusCode\n *   The HTTP response status code.\n * @param {object} responseHeaders\n *   The HTTP headers returned in the response.\n * @param {number} startTime\n *   The time the request was issued by the client.\n * @param {number} endTime\n *   The time the response was received by the client.\n * @constructor\n */\n\nfunction RequestResult(method, path, query, requestRaw, requestContent, responseRaw, responseContent, statusCode, responseHeaders, startTime, endTime) {\n  /** @type {'GET' | 'POST' | 'PUT' | 'PATCH' | 'DELETE'} */\n  this.method = method;\n  /** @type {string} */\n\n  this.path = path;\n  /**\n   * URL query. Null unless `method == 'get'`.\n   * *Not* related to {@link Client.query}.\n   * @type {object}\n   */\n\n  this.query = query;\n  /** @type {string} */\n\n  this.requestRaw = requestRaw;\n  /** @type {object} */\n\n  this.requestContent = requestContent;\n  /** @type {string} */\n\n  this.responseRaw = responseRaw;\n  /**\n   * Parsed value returned by the server.\n   * Includes \"resource\" wrapper dict, or may be an FaunaHttpErrorResponseContent instead\n   * @type {object | FaunaHttpErrorResponseContent}\n   */\n\n  this.responseContent = responseContent;\n  /** @type {number} */\n\n  this.statusCode = statusCode;\n  /** @type {object} */\n\n  this.responseHeaders = responseHeaders;\n  /** @type {number} */\n\n  this.startTime = startTime;\n  /** @type {number} */\n\n  this.endTime = endTime;\n}\n/**\n * `this.endTime - this.startTime`: Time taken in milliseconds.\n * @type {number}\n */\n\n\nObject.defineProperty(RequestResult.prototype, 'timeTaken', {\n  get: function () {\n    return this.endTime - this.startTime;\n  }\n});\nmodule.exports = RequestResult;","map":{"version":3,"sources":["/home/verified/node_modules/faunadb/src/RequestResult.js"],"names":["RequestResult","method","path","query","requestRaw","requestContent","responseRaw","responseContent","statusCode","responseHeaders","startTime","endTime","Object","defineProperty","prototype","get","module","exports"],"mappings":"AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASA,aAAT,CACEC,MADF,EAEEC,IAFF,EAGEC,KAHF,EAIEC,UAJF,EAKEC,cALF,EAMEC,WANF,EAOEC,eAPF,EAQEC,UARF,EASEC,eATF,EAUEC,SAVF,EAWEC,OAXF,EAYE;AACA;AACA,OAAKV,MAAL,GAAcA,MAAd;AAEA;;AACA,OAAKC,IAAL,GAAYA,IAAZ;AAEA;AACF;AACA;AACA;AACA;;AACE,OAAKC,KAAL,GAAaA,KAAb;AAEA;;AACA,OAAKC,UAAL,GAAkBA,UAAlB;AAEA;;AACA,OAAKC,cAAL,GAAsBA,cAAtB;AAEA;;AACA,OAAKC,WAAL,GAAmBA,WAAnB;AAEA;AACF;AACA;AACA;AACA;;AACE,OAAKC,eAAL,GAAuBA,eAAvB;AAEA;;AACA,OAAKC,UAAL,GAAkBA,UAAlB;AAEA;;AACA,OAAKC,eAAL,GAAuBA,eAAvB;AAEA;;AACA,OAAKC,SAAL,GAAiBA,SAAjB;AAEA;;AACA,OAAKC,OAAL,GAAeA,OAAf;AACD;AAED;AACA;AACA;AACA;;;AACAC,MAAM,CAACC,cAAP,CAAsBb,aAAa,CAACc,SAApC,EAA+C,WAA/C,EAA4D;AAC1DC,EAAAA,GAAG,EAAE,YAAW;AACd,WAAO,KAAKJ,OAAL,GAAe,KAAKD,SAA3B;AACD;AAHyD,CAA5D;AAMAM,MAAM,CAACC,OAAP,GAAiBjB,aAAjB","sourcesContent":["'use strict'\n\n/**\n * A structure containing the request and response context for a given FaunaDB request.\n * Provided to an observer function optionally defined in the {@link Client} constructor.\n *\n * @param {'GET' | 'POST' | 'PUT' | 'PATCH' | 'DELETE'} method\n *   The HTTP method used in the request.\n * @param {string} path\n *   The path that was queried. Relative to the client's domain.\n * @param {string} query\n *   URL query parameters. Only set if `method` is \"GET\".\n * @param {Object} requestRaw\n *   The JSON request string.\n * @param {Object} requestContent\n *   The request data.\n * @param {string} responseRaw\n *   The unparsed response data, as a string.\n * @param {object | FaunaHttpErrorResponseContent} responseContent\n *   The response data parsed as JSON.\n * @param {number} statusCode\n *   The HTTP response status code.\n * @param {object} responseHeaders\n *   The HTTP headers returned in the response.\n * @param {number} startTime\n *   The time the request was issued by the client.\n * @param {number} endTime\n *   The time the response was received by the client.\n * @constructor\n */\nfunction RequestResult(\n  method,\n  path,\n  query,\n  requestRaw,\n  requestContent,\n  responseRaw,\n  responseContent,\n  statusCode,\n  responseHeaders,\n  startTime,\n  endTime\n) {\n  /** @type {'GET' | 'POST' | 'PUT' | 'PATCH' | 'DELETE'} */\n  this.method = method\n\n  /** @type {string} */\n  this.path = path\n\n  /**\n   * URL query. Null unless `method == 'get'`.\n   * *Not* related to {@link Client.query}.\n   * @type {object}\n   */\n  this.query = query\n\n  /** @type {string} */\n  this.requestRaw = requestRaw\n\n  /** @type {object} */\n  this.requestContent = requestContent\n\n  /** @type {string} */\n  this.responseRaw = responseRaw\n\n  /**\n   * Parsed value returned by the server.\n   * Includes \"resource\" wrapper dict, or may be an FaunaHttpErrorResponseContent instead\n   * @type {object | FaunaHttpErrorResponseContent}\n   */\n  this.responseContent = responseContent\n\n  /** @type {number} */\n  this.statusCode = statusCode\n\n  /** @type {object} */\n  this.responseHeaders = responseHeaders\n\n  /** @type {number} */\n  this.startTime = startTime\n\n  /** @type {number} */\n  this.endTime = endTime\n}\n\n/**\n * `this.endTime - this.startTime`: Time taken in milliseconds.\n * @type {number}\n */\nObject.defineProperty(RequestResult.prototype, 'timeTaken', {\n  get: function() {\n    return this.endTime - this.startTime\n  },\n})\n\nmodule.exports = RequestResult\n"]},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"'use strict';\n\nvar util = require('../_util');\n/**\n * Thrown by HttpClient when request hits specified timeout.\n *\n * @param {?string} message\n * @extends Error\n * @constructor\n */\n\n\nfunction TimeoutError(message) {\n  Error.call(this);\n  this.message = message || 'Request aborted due to timeout';\n  this.isTimeoutError = true;\n}\n\nutil.inherits(TimeoutError, Error);\n/**\n * Thrown by HttpClient when request is aborted via Signal interface.\n *\n * @param {?string} message\n * @extends Error\n * @constructor\n */\n\nfunction AbortError(message) {\n  Error.call(this);\n  this.message = message || 'Request aborted';\n  this.isAbortError = true;\n}\n\nutil.inherits(AbortError, Error);\nmodule.exports = {\n  TimeoutError: TimeoutError,\n  AbortError: AbortError\n};","map":{"version":3,"sources":["/home/verified/node_modules/faunadb/src/_http/errors.js"],"names":["util","require","TimeoutError","message","Error","call","isTimeoutError","inherits","AbortError","isAbortError","module","exports"],"mappings":"AAAA;;AACA,IAAIA,IAAI,GAAGC,OAAO,CAAC,UAAD,CAAlB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASC,YAAT,CAAsBC,OAAtB,EAA+B;AAC7BC,EAAAA,KAAK,CAACC,IAAN,CAAW,IAAX;AAEA,OAAKF,OAAL,GAAeA,OAAO,IAAI,gCAA1B;AACA,OAAKG,cAAL,GAAsB,IAAtB;AACD;;AAEDN,IAAI,CAACO,QAAL,CAAcL,YAAd,EAA4BE,KAA5B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASI,UAAT,CAAoBL,OAApB,EAA6B;AAC3BC,EAAAA,KAAK,CAACC,IAAN,CAAW,IAAX;AAEA,OAAKF,OAAL,GAAeA,OAAO,IAAI,iBAA1B;AACA,OAAKM,YAAL,GAAoB,IAApB;AACD;;AAEDT,IAAI,CAACO,QAAL,CAAcC,UAAd,EAA0BJ,KAA1B;AAEAM,MAAM,CAACC,OAAP,GAAiB;AACfT,EAAAA,YAAY,EAAEA,YADC;AAEfM,EAAAA,UAAU,EAAEA;AAFG,CAAjB","sourcesContent":["'use strict'\nvar util = require('../_util')\n\n/**\n * Thrown by HttpClient when request hits specified timeout.\n *\n * @param {?string} message\n * @extends Error\n * @constructor\n */\nfunction TimeoutError(message) {\n  Error.call(this)\n\n  this.message = message || 'Request aborted due to timeout'\n  this.isTimeoutError = true\n}\n\nutil.inherits(TimeoutError, Error)\n\n/**\n * Thrown by HttpClient when request is aborted via Signal interface.\n *\n * @param {?string} message\n * @extends Error\n * @constructor\n */\nfunction AbortError(message) {\n  Error.call(this)\n\n  this.message = message || 'Request aborted'\n  this.isAbortError = true\n}\n\nutil.inherits(AbortError, Error)\n\nmodule.exports = {\n  TimeoutError: TimeoutError,\n  AbortError: AbortError,\n}\n"]},"metadata":{},"sourceType":"script"}